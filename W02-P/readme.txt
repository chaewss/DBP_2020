<새로 배운 내용>
서버, PHP, MySQL 정보전달 순서
CT에서 어떤 정보 요청 -> 웹 서버는 인터넷을 통해 전달된 요청정보를 보고(기본적으로 html태그만 읽을 수 있음) 해당 페이지에 PHP 코드라는 표시가 되어 있으면 그 내용을 PHP에 전달 -> PHP가 자신의 코드를 해석하면서 어떤 정보들이 필요한 경우 해당 정보를 데이터베이스에서 요청 -> 데이터베이스 서버가 요청 받은 정보를 반환 -> PHP는 전달받은 정보를 가지고 html코드를 웹서버가 이해할 수 있는 태그 형태로만 이루어진 페이지(일종의 소스코드)로 만들어 전달 -> 웹서버는 그 내용을 웹 브라우저에 전달

PHP와 mysql을 연동하기 위해 mysql, mysqli, PDO가 있는데 mysqli를 가장 많이 사용
mysqli_connect(“localhost”, “root”, “”, “dbp”); 할 경우 객체정보인 링크가 포함되어 return

*	PHP에서는 변수 앞 ‘$’ 표시

오류를 검출할 때 echo mysqli_error($link)는 DB테이블의 구조가 드러나 악용이 가능
->	echo ‘저장하는 과정에서 문제가 발생했습니다. 관리자에게 문의하세요.’;
    error_log(mysql_error($link)); // 관리자가 볼 수 있는 내부의 log파일로 저장

HTML에서 <a>는 앵커태그로 현재 웹페이지에서 다른 웹페이지로 하이퍼 링크를 하거나 현재 웹페이지 내의 특정 부분 이동시에 사용한다.
<href>는 링크나 이미지 맵의 모든 종류의 URL을 지정하는 것이다.
create 글자를 누르면 새로운 데이터를 입력시키는 창인 create.php와 연결하기 위해 인덱스 창에서 <a href=”create.php”>create</a> 를 삽입한다.

action에서는 ‘get’, ‘post’의 두 가지 방법이 있는데 ‘get’은 url주소에 보내고 싶은 정보를 넣는 것이다. 이는 간편하지만 누구나 볼 수 있는 url에 주고받는 데이터가 표시돼 보안상 문제가 생길 수 있고 다른 사용자가 잘못된 정보를 입력할 수 있다는 단점이 있다. ‘post’는 get과는 달리 정보를 숨겨서 전달하는 방식이다.

process_create.php 에서는 받은 정보를 데이터베이스에 연결해서 저장하는 역할을 수행하는 기능을 하게 만든다. 처음에 $link = mysqli_connect(“localhost”, “root”, “”, “dbp”); 로 PHP와 mysql을 연결해주고 $query = “INSERT INTO 테이블이름 ( ) VALUES ()” 형태로 정보값을 넣는데 전 단계에서 post로 정보를 전달받은 경우 ‘{$_POST[‘(의미가 있는 index 정보)’]}’ 이렇게 표현해 이전 단계에서 받은 정보를 데이터베이스에 연결해 저장한다. 그 후 $result = mysqli_query($link, $query); 로 쿼리를 던진다.

데이터베이스에 저장된 데이터를 꺼낼 때 배열인 경우 ‘[ ]’, 객체인 경우 ‘->’를 사용한다.
ex) $result->num_rows

mysqli_fetch_array( ) 는 각 행의 값을 string으로 return하고 비어있을 경우 null을 return한다.

if(isset( )) { } 은 괄호 안에 들어간 변수가 없을 때는 실행하지 않는다.

<문제가 발생하거나 고민한 내용>
처음 DB를 생성할 때 CREATE DATABASE dbp; 라는 명령어를 이용해 테이블을 생성했기 때문에 USE dbp 명령어를 꼭 입력해야 하는데 그 부분을 넘어가서 자꾸 오류가 났다. 이렇게 간단한 곳에서 오류가 난 줄도 모르고 계속 다른 곳에서 헤매다가 강의를 멈추고 처음부터 들으면서 이 부분을 놓쳤다는 것을 깨닳았다. 그 후 과제할 때도 또 USE dbp; 를 깜빡한 걸 보면 이 명령어를 주의해야할 것 같다.

<참고할 만한 내용>
https://www.php.net/
https://htmlschool.tistory.com/entry/HTML-a-%ED%83%9C%EA%B7%B8-%EC%95%B5%EC%BB%A4%ED%83%9C%EA%B7%B8Anchor

<회고>
+ : 실시간 대면강의였으면 실습강의라 이해를 못하고 넘어갔을 경우에 교수님의 컴퓨터 화면을 기억하지 못해서 한참 해맸을 것 같은데 녹화강의라 모르는 부분은 다시 돌려서 보면 돼서 정말 좋았다. 데이터베이스에 대해서는 이론 강의만 들어 정보를 관리한다고만 알고있었는데 이렇게 웹 페이지에서 데이터베이스 정보를 직접 입력하고 또, 그 정보를 볼 수 있다는게 신기하고 재미있었다.
- : CSS를 배웠어서 버튼도 따로 넣고 활용하려 했는데 2년전에 배운 후 복습을 하지 않아 까먹어 정확하게 손을 댈 수 없어서 아쉬웠다.
! : 서버와 PHP, DB의 관계에 대해 정확하게 알게 되면서 웹 내에서 정보가 어떻게 추가되고 보여지는지 과정을 알게 되었다.
